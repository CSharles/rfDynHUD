[Meta]
rfDynHUD_Version        = "0.9.1-ALPHA (build 30)"
Design_Resolution       = "1920x1200"

[NamedColors]
StandardFontColor       = #C0BC3D
StandardBackground      = #00000096
TVStyleCaptionBackgroundColor = #787878
TVStyleCaptionFontColor = #FFFFFF
TVStyleDataBackgroundColor = #000000
TVStyleDataFontColor    = #FFFFFF

[NamedFonts]
SmallerFont             = "Monospaced-BOLD-9v"
GearFont                = "Monospaced-BOLD-26v"
BiggerFont              = "Monospaced-BOLD-14v"
StandardFont2           = "Monospaced-BOLD-12v"
StandardFont3           = "Monospaced-BOLD-11v"
StandardFont            = "Monospaced-BOLD-13v"
TVStyleFont             = "Verdana-PLAIN-16va"

[BorderAliases]
StandardBorder          = "transparent_border.png"

[Widget::MiscWidget1]
class                   = "net.ctdp.rfdynhud.widgets.misc.MiscWidget" // The Java class, that defines the Widget.
positioning             = TOP_CENTER         // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                       = 0.0%               // The x-coordinate for the position.
y                       = 11.230469%         // The y-coordinate for the position.
width                   = -44.82422%         // The width. Use negative values to make the Widget be sized relative to screen size.
height                  = 6.0546875%         // The height. Use negative values to make the Widget be sized relative to screen size.
initiallyVisibile       = true               // The initial visibility.
backgroundColor         = "StandardBackground" // The Widget's background color in the format #RRGGBBAA (hex).
font                    = "StandardFont"     // The used font.
fontColor               = "StandardFontColor" // The Widget's font color in the format #RRGGBB (hex).
displayScoring          = true               // Display the scoring part of the Widget?
displayTiming           = true               // Display the timing part of the Widget?
displayVelocity         = true               // Display the velocity and top speed part of the Widget?
lapDisplayType          = CURRENT_LAP        // The way the laps are displayed. Valid values: CURRENT_LAP, LAPS_DONE.
relTopspeedResetDelay   = 5000               // The delay after which the relative topspeed is resetted (in milliseconds).

[Widget::StandingsWidget1]
class                   = "net.ctdp.rfdynhud.widgets.standings.StandingsWidget" // The Java class, that defines the Widget.
positioning             = TOP_LEFT           // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                       = 0.48828125%        // The x-coordinate for the position.
y                       = 59.570312%         // The y-coordinate for the position.
width                   = 28.222656%         // The width. Use negative values to make the Widget be sized relative to screen size.
height                  = 14.941406%         // The height. Use negative values to make the Widget be sized relative to screen size.
initiallyVisibile       = true               // The initial visibility.
backgroundColor         = "StandardBackground" // The Widget's background color in the format #RRGGBBAA (hex).
font                    = "BiggerFont"       // The used font.
fontColor               = "StandardFontColor" // The Widget's font color in the format #RRGGBB (hex).
fontColor_me            = "#7A7727"          // The font color used for myself in the format #RRGGBB (hex).
fontColor_out           = "#646464"          // The font color used for retired drivers in the format #RRGGBB (hex).
fontColor_finished      = "#00FF00"          // The font color used for finished drivers in the format #RRGGBB (hex).
useAutoWidth            = true               // Automatically compute and display the width?
initialView             = RELATIVE_TO_ME     // the initial kind of standings view. Valid values: RELATIVE_TO_LEADER, RELATIVE_TO_ME.
forceLeaderDisplayed    = true               // Display leader regardless of maximum displayed drivers setting?
showThreeLetterCodes    = false              // Whether to display a three-letter-code for each driver, or not.
abbreviate              = false              // Whether to abbreviate "Stops", or not.

[Widget::ControlsWidget1]
class                   = "net.ctdp.rfdynhud.widgets.controls.ControlsWidget" // The Java class, that defines the Widget.
positioning             = BOTTOM_CENTER      // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                       = -12.988281%        // The x-coordinate for the position.
y                       = 8.105469%          // The y-coordinate for the position.
width                   = 9.863281%          // The width. Use negative values to make the Widget be sized relative to screen size.
height                  = 16.503906%         // The height. Use negative values to make the Widget be sized relative to screen size.
initiallyVisibile       = true               // The initial visibility.
backgroundColor         = "StandardBackground" // The Widget's background color in the format #RRGGBBAA (hex).
displayClutch           = true               // Display the clutch bar?
clutchColor             = "#0000FF"          // The color used for the clutch bar in the format #RRGGBB (hex).
displayBrake            = true               // Display the brake bar?
brakeColor              = "#FF0000"          // The color used for the brake bar in the format #RRGGBB (hex).
displayThrottle         = true               // Display the throttle bar?
throttleColor           = "#00FF00"          // The color used for the throttle bar in the format #RRGGBB (hex).
gap                     = 5                  // Gap between the bars

[Widget::RevMeterWidget1]
class                   = "net.ctdp.rfdynhud.widgets.revmeter.RevMeterWidget" // The Java class, that defines the Widget.
positioning             = BOTTOM_CENTER      // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                       = 1.0742188%         // The x-coordinate for the position.
y                       = 25.390625%         // The y-coordinate for the position.
width                   = 16.308594%         // The width. Use negative values to make the Widget be sized relative to screen size.
height                  = 21.777344%         // The height. Use negative values to make the Widget be sized relative to screen size.
initiallyVisibile       = true               // The initial visibility.
font                    = "StandardFont"     // The used font.
fontColor               = "StandardFontColor" // The Widget's font color in the format #RRGGBB (hex).
backgroundImageName     = "tacho_orange_2.png" // The name of the background image.
needleImageName         = "needle4.png"      // The name of the needle image.
needleAxisBottomOffset  = 60                 // The offset in (unscaled) pixels from the bottom of the image, where the center of the needle's axis is.
needleRotationForZeroRPM= 122.40001          // The rotation for the needle image, that is has for zero RPM (in degrees).
needleRotationForMaxRPM = -118.399994        // The rotation for the needle image, that is has for maximum RPM (in degrees).
editorRPM               = 3750               // The RPM (rounds per minute) displayed in the editor (not in rFactor)
displayRevMarkers       = true               // Display rev markers?
displayRevMarkerNumbers = true               // Display rev marker numbers?
revMarkersInnerRadius   = 224                // The inner radius of the rev markers (in background image space)
revMarkersLength        = 50                 // The length of the rev markers (in background image space)
revMarkersBigStep       = 1000               // Step size of bigger rev markers
revMarkersSmallStep     = 200                // Step size of smaller rev markers
revMarkersColor         = "#FFFFFF"          // The color used to draw the rev markers.
revMarkersMediumColor   = "#FFFF00"          // The color used to draw the rev markers for medium boost.
revMarkersHighColor     = "#FF0000"          // The color used to draw the rev markers for high revs.
revMarkersFont          = "Monospaced-BOLD-9v" // The font used to draw the rev marker numbers.
revMarkersFontColor     = "#FFFFFF"          // The font color used to draw the rev marker numbers.
displayShiftLight       = true               // Display a shift light?
shiftLightImageName     = "shiftlight_on.png" // The name of the shift light image.
shiftLightPosX          = 625                // The x-offset in pixels to the gear label.
shiftLightPosY          = 42                 // The y-offset in pixels to the gear label.
shiftLightRPM           = -500               // The RPM (rounds per minute) to subtract from the maximum for the level to display shoft light on
gearPosX                = 325                // The x-offset in pixels to the gear label.
gearPosY                = 450                // The y-offset in pixels to the gear label.
gearFont                = "GearFont"         // The font used to draw the gear.
gearFontColor           = "#1A261C"          // The font color used to draw the gear.
displayBoostBar         = true               // Display a graphical bar for engine boost mapping?
boostBarPosX            = 135                // The x-position of the boost bar.
boostBarPosY            = 671                // The y-position of the boost bar.
boostBarWidth           = 438                // The width of the boost bar.
boostBarHeight          = 27                 // The height of the boost bar.
displayBoostNumber      = false              // Display a number for engine boost mapping?
boostNumberPosX         = 377                // The x-position of the boost number.
boostNumberPosY         = 510                // The y-position of the boost number.
boostNumberFont         = "StandardFont"     // The font used to draw the boost number.
boostNumberFontColor    = "#FF0000"          // The font color used to draw the boost bar.
rpmPosY                 = 603                // The offset in (background image space) pixels from the top of the Widget, where the text is to be placed.

[Widget::TemperaturesWidget1]
class                   = "net.ctdp.rfdynhud.widgets.temperatures.TemperaturesWidget" // The Java class, that defines the Widget.
positioning             = TOP_RIGHT          // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                       = 0.5859375%         // The x-coordinate for the position.
y                       = 14.6484375%        // The y-coordinate for the position.
width                   = 17.773438%         // The width. Use negative values to make the Widget be sized relative to screen size.
height                  = 30.371094%         // The height. Use negative values to make the Widget be sized relative to screen size.
initiallyVisibile       = true               // The initial visibility.
backgroundColor         = "StandardBackground" // The Widget's background color in the format #RRGGBBAA (hex).
font                    = "StandardFont"     // The used font.
fontColor               = "StandardFontColor" // The Widget's font color in the format #RRGGBB (hex).
font2                   = "SmallerFont"      // The used (smaller) font.
displayEngine           = true               // Display the engine part of the Widget?
engineHeight            = "9.863281%"        // The height of the engine bar.
displayTires            = true               // Display the tire part of the Widget?
tireWidth               = "10.546875%"       // The width of a tire image.
tireHeight              = "9.863281%"        // The height of a tire image.
displayBrakes           = true               // Display the brakes of the Widget?
brakeWidth              = "7.03125%"         // The width of a brake image.
brakeHeight             = "19.726562%"       // The height of a brake image.
brakeTempsPeekDelay     = 3000               // (in milliseconds) If greater than 0, the brake temperatures will stay on their peek values after a turn for the chosen amount of milliseconds.

[Widget::WearWidget1]
class                   = "net.ctdp.rfdynhud.widgets.wear.WearWidget" // The Java class, that defines the Widget.
positioning             = TOP_RIGHT          // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                       = 0.5859375%         // The x-coordinate for the position.
y                       = 45.410156%         // The y-coordinate for the position.
width                   = 17.773438%         // The width. Use negative values to make the Widget be sized relative to screen size.
height                  = 10.3515625%        // The height. Use negative values to make the Widget be sized relative to screen size.
initiallyVisibile       = true               // The initial visibility.
backgroundColor         = "StandardBackground" // The Widget's background color in the format #RRGGBBAA (hex).
font                    = "StandardFont"     // The used font.
fontColor               = "StandardFontColor" // The Widget's font color in the format #RRGGBB (hex).
font2                   = "SmallerFont"      // The used (smaller) font.
displayCompoundName     = false              // Display the tire compound name in the header?
tireWidth               = "10.546875%"       // The width of a tire image.
tireHeight              = "30.664062%"       // The height of a tire image.

[Widget::FuelWidget1]
class                   = "net.ctdp.rfdynhud.widgets.fuel.FuelWidget" // The Java class, that defines the Widget.
positioning             = TOP_RIGHT          // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                       = 0.5859375%         // The x-coordinate for the position.
y                       = 56.054688%         // The y-coordinate for the position.
width                   = 17.773438%         // The width. Use negative values to make the Widget be sized relative to screen size.
height                  = 13.4765625%        // The height. Use negative values to make the Widget be sized relative to screen size.
initiallyVisibile       = true               // The initial visibility.
backgroundColor         = "StandardBackground" // The Widget's background color in the format #RRGGBBAA (hex).
font                    = "StandardFont2"    // The used font.
fontColor               = "StandardFontColor" // The Widget's font color in the format #RRGGBB (hex).
font2                   = "StandardFont3"    // The used (smaller) font.
fuelFont                = "Monospaced-BOLD-13v" // The used font for fuel load.
fuelFontColor           = "#2828FF"          // The color to use for fuel load in the format #RRGGBB (hex).
roundUpRemainingLaps    = true               // Round up remaining fuel laps to include the current lap?

[Widget::TimingWidget1]
class                   = "net.ctdp.rfdynhud.widgets.timing.TimingWidget" // The Java class, that defines the Widget.
positioning             = TOP_LEFT           // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                       = 0.48828125%        // The x-coordinate for the position.
y                       = 29.101562%         // The y-coordinate for the position.
width                   = 23.925781%         // The width. Use negative values to make the Widget be sized relative to screen size.
height                  = 30.078125%         // The height. Use negative values to make the Widget be sized relative to screen size.
initiallyVisibile       = true               // The initial visibility.
backgroundColor         = "StandardBackground" // The Widget's background color in the format #RRGGBBAA (hex).
font                    = "StandardFont"     // The used font.
fontColor               = "StandardFontColor" // The Widget's font color in the format #RRGGBB (hex).
displayAbsFastest       = true               // Display the absolute fastest lap part of the Widget?
cumulativeSectors       = false              // Display the second sector as a sum?
forceCurrentCumulSectors= true               // Display the second sector as a sum even if the others not?
lastLapDisplayDelay     = -85                // The time for which the last driven lap will keepbeing displayed (in milliseconds).

[Widget::TimeCompareWidget1]
class                   = "net.ctdp.rfdynhud.widgets.timecomp.TimeCompareWidget" // The Java class, that defines the Widget.
positioning             = TOP_LEFT           // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                       = 0.48828125%        // The x-coordinate for the position.
y                       = 14.6484375%        // The y-coordinate for the position.
width                   = 23.925781%         // The width. Use negative values to make the Widget be sized relative to screen size.
height                  = 14.0625%           // The height. Use negative values to make the Widget be sized relative to screen size.
initiallyVisibile       = true               // The initial visibility.
backgroundColor         = "StandardBackground" // The Widget's background color in the format #RRGGBBAA (hex).
font                    = "StandardFont"     // The used font.
fontColor               = "StandardFontColor" // The Widget's font color in the format #RRGGBB (hex).
displaySectors          = true               // Display sector times?
