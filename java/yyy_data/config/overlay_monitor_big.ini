[Meta]
rfDynHUD_Version        = "1.1.0-Alpha (build 72)"
Design_Resolution       = "1920x1200"
Design_Grid             = "(0,0;10,10)"

[Global]
useClassScoring         = false              // Ignore vehicles from other classes than the viewed one for scoring?

[NamedColors]
ETVCaptionBackgroundColor = #787878
ETVCaptionBackgroundColor1st = #B10000
ETVCaptionFontColor     = #FFFFFF
ETVDataBackgroundColor  = #000000
ETVDataBackgroundColor1st = #230000
ETVDataBackgroundColorFaster = #008800
ETVDataBackgroundColorFastest = #C000D2
ETVDataBackgroundColorSlower = #BAB802
ETVDataFontColor        = #FFFFFF
ETVDataFontColorFaster  = #FFFFFF
ETVDataFontColorFasterst= #000000
ETVDataFontColorSlower  = #000000
PositionItemColorLeader = #FF0000C0
PositionItemColorMe     = #00FF00C0
PositionItemColorNextBehind = #FFFF00C0
PositionItemColorNextInFront = #0000FFC0
PositionItemColorNormal = #FFFFFFC0
PositionItemFontColor   = #000000
StandardBackground      = #00000096
StandardFontColor       = #C0BC3D

[NamedFonts]
BiggerFont              = "Monospaced-BOLD-14va"
ETVFont                 = "Verdana-PLAIN-16va"
PositionItemFont        = "Verdana-BOLD-16va"
StandardFont            = "Monospaced-BOLD-13va"

[BorderAliases]
StandardBorder          = "backgroundcolor_border.ini"

[Widget::TimeCompareWidget1]
class                   = "net.ctdp.rfdynhud.widgets.timecomp.TimeCompareWidget" // The Java class, that defines the Widget.
positioning             = TOP_LEFT           // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                       = 4.5%               // The x-coordinate for the position.
y                       = 5.5%               // The y-coordinate for the position.
width                   = 23.925781%         // The width. Use negative values to make the Widget be sized relative to screen size.
height                  = 14.0625%           // The height. Use negative values to make the Widget be sized relative to screen size.
border                  = "StandardBorder"   // The widget's border.
paddingTop              = 0                  // top padding
paddingLeft             = 0                  // left padding
paddingRight            = 0                  // right padding
paddingBottom           = 0                  // bottom padding
initialVisibility       = true               // The initial visibility.
backgroundColor         = "StandardBackground" // The Widget's background color in the format #RRGGBBAA (hex).
font                    = "StandardFont"     // The used font.
fontColor               = "StandardFontColor" // The Widget's font color in the format #RRGGBB (hex).
abbreviate              = false              // Whether to abbreviate "Sector" to "Sec", or not.
displaySectors          = true               // Display sector times?

[Widget::MiscWidget1]
class                   = "net.ctdp.rfdynhud.widgets.misc.MiscWidget" // The Java class, that defines the Widget.
positioning             = TOP_CENTER         // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                       = 0.0%               // The x-coordinate for the position.
y                       = 5.5%               // The y-coordinate for the position.
width                   = 55.0%              // The width. Use negative values to make the Widget be sized relative to screen size.
height                  = 6.0546875%         // The height. Use negative values to make the Widget be sized relative to screen size.
border                  = "StandardBorder"   // The widget's border.
paddingTop              = 0                  // top padding
paddingLeft             = 0                  // left padding
paddingRight            = 0                  // right padding
paddingBottom           = 0                  // bottom padding
initialVisibility       = true               // The initial visibility.
backgroundColor         = "StandardBackground" // The Widget's background color in the format #RRGGBBAA (hex).
font                    = "StandardFont"     // The used font.
fontColor               = "StandardFontColor" // The Widget's font color in the format #RRGGBB (hex).
displayScoring          = true               // Display the scoring part of the Widget?
displayTiming           = true               // Display the timing part of the Widget?
displayVelocity         = true               // Display the velocity and top speed part of the Widget?
relTopspeedResetDelay   = 10000              // The delay after which the relative topspeed is resetted (in milliseconds).

[Widget::TimingWidget1]
class                   = "net.ctdp.rfdynhud.widgets.timing.TimingWidget" // The Java class, that defines the Widget.
positioning             = TOP_LEFT           // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                       = 4.5%               // The x-coordinate for the position.
y                       = 20.0%              // The y-coordinate for the position.
width                   = 23.925781%         // The width. Use negative values to make the Widget be sized relative to screen size.
height                  = 30.078125%         // The height. Use negative values to make the Widget be sized relative to screen size.
border                  = "StandardBorder"   // The widget's border.
paddingTop              = 0                  // top padding
paddingLeft             = 0                  // left padding
paddingRight            = 0                  // right padding
paddingBottom           = 0                  // bottom padding
initialVisibility       = true               // The initial visibility.
backgroundColor         = "StandardBackground" // The Widget's background color in the format #RRGGBBAA (hex).
font                    = "StandardFont"     // The used font.
fontColor               = "StandardFontColor" // The Widget's font color in the format #RRGGBB (hex).
displayAbsFastest       = true               // Display the absolute fastest lap part of the Widget?
cumulativeSectors       = false              // Display the second sector as a sum?
forceCurrentCumulSectors= true               // Display the second sector as a sum even if the others not?
lastLapDisplayDelay     = -85                // The time for which the last driven lap will keepbeing displayed (in milliseconds).
slowerColor             = "#FF7248"          // The font color to use for positive gaps.
fasterColor             = "#6AFF3D"          // The font color to use for negative gaps.

[Widget::MapWidget1]
class                   = "net.ctdp.rfdynhud.widgets.map.MapWidget" // The Java class, that defines the Widget.
positioning             = BOTTOM_RIGHT       // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                       = 2.0%               // The x-coordinate for the position.
y                       = 2.0%               // The y-coordinate for the position.
width                   = 75.0%              // The width. Use negative values to make the Widget be sized relative to screen size.
height                  = 75.0%              // The height. Use negative values to make the Widget be sized relative to screen size.
border                  = N/A                // The widget's border.
paddingTop              = 0                  // top padding
paddingLeft             = 0                  // left padding
paddingRight            = 0                  // right padding
paddingBottom           = 0                  // bottom padding
initialVisibility       = true               // The initial visibility.
font                    = "PositionItemFont" // The used font.
fontColor               = "PositionItemFontColor" // The Widget's font color in the format #RRGGBB (hex).
rotationEnabled         = false              // Map rotation enabled?
roadColorSec1           = "#000000"          // The color used for the road and sector 1 in #RRGGBBAA (hex).
roadBoundaryColorSec1   = "#FFFFFF"          // The color used for the road boundary and sector 1 in #RRGGBBAA (hex).
roadColorSec2           = "#000000"          // The color used for the road and sector 2 in #RRGGBBAA (hex).
roadBoundaryColorSec2   = "#FFFFFF"          // The color used for the road boundary and sector 2 in #RRGGBBAA (hex).
roadColorSec3           = "#000000"          // The color used for the road and sector 3 in #RRGGBBAA (hex).
roadBoundaryColorSec3   = "#FFFFFF"          // The color used for the road boundary and sector 3 in #RRGGBBAA (hex).
pitlaneColor            = "#FFFF00"          // The color used for the pitlane in #RRGGBBAA (hex).
roadWidth               = 4                  // The width of the roadin absolute pixels.
itemRadius              = 14                 // The abstract radius for any displayed driver item.
markColorNormal         = "PositionItemColorNormal" // The color used for all, but special cars in #RRGGBBAA (hex).
markColorLeader         = "PositionItemColorLeader" // The color used for the leader's car in #RRGGBBAA (hex).
markColorMe             = "PositionItemColorMe" // The color used for your own car in #RRGGBBAA (hex).
useMyColorForMe1st      = false              // Use 'markColorMe' for my item when I am at 1st place?
markColorNextInFront    = "PositionItemColorNextInFront" // The color used for the car in front of you in #RRGGBBAA (hex).
markColorNextBehind     = "PositionItemColorNextBehind" // The color used for the car behind you in #RRGGBBAA (hex).
displayPosNumbers       = true               // Display numbers on the position markers?
displayNameLabels       = true               // Display name label near the position markers?
nameLabelPos            = BELOW_RIGHT        // Positioning of the name labels.
nameLabelFont           = "PositionItemFont" // Font for the name labels.
nameLabelFontColor      = "PositionItemColorNormal" // Font color for the name labels.

[Widget::StandingsWidget1]
class                   = "net.ctdp.rfdynhud.widgets.standings.StandingsWidget" // The Java class, that defines the Widget.
positioning             = TOP_LEFT           // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                       = 4.5%               // The x-coordinate for the position.
y                       = 50.5%              // The y-coordinate for the position.
width                   = 14.0%              // The width. Use negative values to make the Widget be sized relative to screen size.
height                  = 14.916667%         // The height. Use negative values to make the Widget be sized relative to screen size.
border                  = "StandardBorder"   // The widget's border.
paddingTop              = 0                  // top padding
paddingLeft             = 0                  // left padding
paddingRight            = 0                  // right padding
paddingBottom           = 0                  // bottom padding
initialVisibility       = true               // The initial visibility.
backgroundColor         = "StandardBackground" // The Widget's background color in the format #RRGGBBAA (hex).
font                    = "BiggerFont"       // The used font.
fontColor               = "StandardFontColor" // The Widget's font color in the format #RRGGBB (hex).
fontColor_me            = "#367727"          // The font color used for myself in the format #RRGGBB (hex).
fontColor_out           = "#646464"          // The font color used for retired drivers in the format #RRGGBB (hex).
fontColor_finished      = "#00FF00"          // The font color used for finished drivers in the format #RRGGBB (hex).
useAutoWidth            = true               // Automatically compute and display the width?
initialView             = RELATIVE_TO_ME     // the initial kind of standings view. Valid values: RELATIVE_TO_LEADER, RELATIVE_TO_ME.
forceLeaderDisplayed    = true               // Display leader regardless of maximum displayed drivers setting?
nameDisplayType         = FULL_NAME          // How to display driver names.
showLapsOrStops         = true               // Whether to show the number of laps or stops done or not.
abbreviate              = false              // Whether to abbreviate "Stops", or not.
showTopspeeds           = false              // Whether to show a topspeeds column or not.

[Widget::ETVTimingWidget1]
class                   = "net.ctdp.rfdynhud.etv2010.widgets.timing.ETVTimingWidget" // The Java class, that defines the Widget.
positioning             = TOP_LEFT           // The way, position coordinates are interpreted (relative to). Valid values: TOP_LEFT, TOP_CENTER, TOP_RIGHT, CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT.
x                       = 4.5%               // The x-coordinate for the position.
y                       = 66.5%              // The y-coordinate for the position.
width                   = 20.019531%         // The width. Use negative values to make the Widget be sized relative to screen size.
height                  = 8.496094%          // The height. Use negative values to make the Widget be sized relative to screen size.
border                  = N/A                // The widget's border.
paddingTop              = 0                  // top padding
paddingLeft             = 0                  // left padding
paddingRight            = 0                  // right padding
paddingBottom           = 0                  // bottom padding
initialVisibility       = true               // The initial visibility.
backgroundColor         = "ETVDataBackgroundColor" // The Widget's background color in the format #RRGGBBAA (hex).
font                    = "ETVFont"          // The used font.
fontColor               = "ETVDataFontColor" // The Widget's font color in the format #RRGGBB (hex).
captionBgColor          = "ETVCaptionBackgroundColor" // The background color for the "Lap" caption.
captionColor            = "ETVCaptionFontColor" // The font color for the "Lap" caption.
captionBgColor1st       = "ETVCaptionBackgroundColor1st" // The background color for the "Position" caption for first place.
dataBgColor1st          = "ETVDataBackgroundColor1st" // The background color for the data area, for first place.
dataBgColorFastest      = "ETVDataBackgroundColorFastest" // The background color for the data area, if a driver made the absolute fastest lap.
dataBgColorFaster       = "ETVDataBackgroundColorFaster" // The background color for the data area, if a negative gap is displayed.
dataBgColorSlower       = "ETVDataBackgroundColorSlower" // The background color for the data area, if a positive gap is displayed.
dataColorFastest        = "ETVDataFontColorFasterst" // The font color for the data area, if a driver made the absolute fastest lap.
dataColorFaster         = "ETVDataFontColorFaster" // The font color for the data area, if a negative gap is displayed.
dataColorSlower         = "ETVDataFontColorSlower" // The font color for the data area, if a positive gap is displayed.
positionFontSize        = 200                // Font size for the position in percent relative to the normal font size.
displayType             = AT_SECTORS         // Always display or just at sector boundaries or always if valid time was made?
visibleTimeBeforeSector = 7                  // The Widget is visible for the given amount of seconds before the relative sector time is reached.
visibleTimeAfterSector  = 7                  // The Widget is visible for the given amount after a sector was finished.
